name: Python package

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        arch: [x86_64, aarch64]
        exclude:
          - os: windows-latest # No hosted agent exists for Windows/ARM64
            arch: aarch64
          - os: windows-latest # Remove this item once compiling on Windows
            arch: x86_64
    runs-on: ${{ matrix.os }}
    steps:
      # Check out code
    - uses: actions/checkout@v3
      # Compile C++ code
    - name: Set up Docker multiarch
      if: startsWith(matrix.os, 'ubuntu')
      uses: docker/setup-qemu-action@v2
    - name: Build C++
      run: |
        build_os=${{ matrix.os }}
        build_arch=${{ matrix.arch }}
        make $PWD/dependencies/cub # git is not available in container, so pre-build this
        if [ ${build_os:0:6} == ubuntu ]; then 
          image=nvidia/cuda:12.1.0-devel-ubuntu20.04
          echo "Using image $image"
          docker run --platform linux/$build_arch --user $(id -u) -i -w /src -v $PWD:/src $image make cpuonly cuda
        else
          make cpuonly TARGET_ARCH=${{ matrix.arch }}
        fi
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
      # 
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    # TODO: How to run CUDA tests on GitHub actions?
    #- name: Run unit tests
    #  if: ${{ matrix.arch == 'x86_64' }} # Tests are too slow to run in emulation. Wait for real aarch64 agents
    #  run: |
    #    PYTHONPATH=. pytest --log-cli-level=DEBUG tests
    - name: Build wheel
      run: |
        python setup.py bdist_wheel
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: bdist_wheel
        path: dist/bitsandbytes-*.whl
        retention-days: 7
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build dist
      run: |
        python setup.py sdist
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: bdist_wheel
        path: dist/
    - run: |
        ls -lR dist/
    - name: Publish to PyPi
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.pypi }}